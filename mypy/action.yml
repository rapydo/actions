inputs:
  project:
    description: "Name of project to be tested"
    required: true
  install:
    description: "List of extra libraries or stubs to be installed"
    required: false
    default: ""
  ignore:
    description: "List of libraries to be ignored"
    required: false
    default: ""
  allow_untyped_defs:
    description: "Allow untyped defs"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - run: |
          pip install mypy lxml html5lib ${{ inputs.install }}
          echo "[mypy]" > mypy.ini

          if [[ ! -z "${{ inputs.ignore }}" ]]; then
            
            for lib in $(echo "${{ inputs.ignore }}"); do
              echo "Ignoring: [${lib}]";
              echo "[mypy-${lib}.*]" >> mypy.ini
              echo "ignore_missing_imports = True" >> mypy.ini
            done
          fi
          
          # ignore alembic migrations
          # Please note that a __init__.py is needed in migrations folder, and alembic does not add it by it-self
          echo "[mypy-projects.*.backend.migrations.*]" >> mypy.ini
          echo "ignore_errors = True" >> mypy.ini

          # This is needed to resolve relative imports
          ln -sf projects/${{ inputs.project }}/backend ${{ inputs.project }}
          # --disallow-any-unimported 
          
          if [[ "${{ inputs.allow_untyped_defs }}" == "true" ]]; then
            DISALLOW_UNTYPED_DEFS=""
          else
            DISALLOW_UNTYPED_DEFS="--disallow-untyped-defs"
          fi

          mypy ${DISALLOW_UNTYPED_DEFS} \
            --disallow-incomplete-defs \
            --disallow-any-generics \
            --check-untyped-defs \
            --warn-redundant-casts \
            --warn-unused-ignores \
            --warn-unused-configs \
            --warn-return-any \
            --warn-unreachable \
            --txt-report report \
            --html-report report \
            projects/${{ inputs.project }}/backend/

          cat report/index.txt

      shell: bash
    # - run: echo "Nice to meet you!"
    #   shell: pwsh
